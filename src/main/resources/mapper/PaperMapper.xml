<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.application.custom.dao.mybatis.PaperMapper">
  <resultMap id="BaseResultMap" type="org.example.application.custom.entity.Paper">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
    <result column="content" jdbcType="VARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, create_time, update_time, del_flag, content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from paper
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from paper
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.example.application.custom.entity.Paper">
    insert into paper (id, name, create_time, 
      update_time, del_flag, content
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=TINYINT}, #{content,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.example.application.custom.entity.Paper">
    insert into paper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.application.custom.entity.Paper">
    update paper
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.application.custom.entity.Paper">
    update paper
    set name = #{name,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=TINYINT},
      content = #{content,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="org.example.application.custom.entity.Paper">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="file_info_id" jdbcType="VARCHAR" property="fileInfoId" />
    <result column="publisher_id" jdbcType="VARCHAR" property="publisherId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.example.application.custom.entity.Paper">
    <result column="author" jdbcType="LONGVARCHAR" property="author" />
    <result column="publisher" jdbcType="LONGVARCHAR" property="publisher" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_time, del_flag, update_time, content, title, file_info_id, publisher_id
  </sql>
  <sql id="Blob_Column_List">
    author, publisher
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from paper
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from paper
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.example.application.custom.entity.Paper">
    insert into paper (id, create_time, del_flag, 
      update_time, content, title, 
      file_info_id, publisher_id, author, 
      publisher)
    values (#{id,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=TINYINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{fileInfoId,jdbcType=VARCHAR}, #{publisherId,jdbcType=VARCHAR}, #{author,jdbcType=LONGVARCHAR}, 
      #{publisher,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.example.application.custom.entity.Paper">
    insert into paper
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="fileInfoId != null">
        file_info_id,
      </if>
      <if test="publisherId != null">
        publisher_id,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="publisher != null">
        publisher,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="fileInfoId != null">
        #{fileInfoId,jdbcType=VARCHAR},
      </if>
      <if test="publisherId != null">
        #{publisherId,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=LONGVARCHAR},
      </if>
      <if test="publisher != null">
        #{publisher,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.application.custom.entity.Paper">
    update paper
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="fileInfoId != null">
        file_info_id = #{fileInfoId,jdbcType=VARCHAR},
      </if>
      <if test="publisherId != null">
        publisher_id = #{publisherId,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=LONGVARCHAR},
      </if>
      <if test="publisher != null">
        publisher = #{publisher,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.example.application.custom.entity.Paper">
    update paper
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=TINYINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      file_info_id = #{fileInfoId,jdbcType=VARCHAR},
      publisher_id = #{publisherId,jdbcType=VARCHAR},
      author = #{author,jdbcType=LONGVARCHAR},
      publisher = #{publisher,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.application.custom.entity.Paper">
    update paper
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=TINYINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      file_info_id = #{fileInfoId,jdbcType=VARCHAR},
      publisher_id = #{publisherId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
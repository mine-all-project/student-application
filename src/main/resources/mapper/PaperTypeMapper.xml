<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.application.custom.dao.mybatis.PaperTypeMapper">
    <resultMap id="BaseResultMap" type="org.example.application.custom.entity.PaperType">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="del_flag" jdbcType="TINYINT" property="delFlag"/>
        <result column="publisher_id" jdbcType="VARCHAR" property="publisherId"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="type_id" jdbcType="VARCHAR" property="typeId"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="org.example.application.custom.entity.PaperType">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <sql id="Base_Column_List">
        id
        , name, create_time, update_time, del_flag, publisher_id, price, type_id
    </sql>
    <sql id="Blob_Column_List">
        content
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from paper_type
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from paper_type
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="org.example.application.custom.entity.PaperType">
        insert into paper_type (id, name, create_time,
                                update_time, del_flag, publisher_id,
                                price, type_id, content)
        values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
                #{updateTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=TINYINT}, #{publisherId,jdbcType=VARCHAR},
                #{price,jdbcType=DECIMAL}, #{typeId,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="org.example.application.custom.entity.PaperType">
        insert into paper_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="publisherId != null">
                publisher_id,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="typeId != null">
                type_id,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=TINYINT},
            </if>
            <if test="publisherId != null">
                #{publisherId,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="org.example.application.custom.entity.PaperType">
        update paper_type
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                del_flag = #{delFlag,jdbcType=TINYINT},
            </if>
            <if test="publisherId != null">
                publisher_id = #{publisherId,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="typeId != null">
                type_id = #{typeId,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.example.application.custom.entity.PaperType">
        update paper_type
        set name         = #{name,jdbcType=VARCHAR},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            update_time  = #{updateTime,jdbcType=TIMESTAMP},
            del_flag     = #{delFlag,jdbcType=TINYINT},
            publisher_id = #{publisherId,jdbcType=VARCHAR},
            price        = #{price,jdbcType=DECIMAL},
            type_id      = #{typeId,jdbcType=VARCHAR},
            content      = #{content,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <select id="findAll" resultType="org.example.application.custom.entity.PaperType">
        select
        <include refid="Base_Column_List"/>
        from paper_type
    </select>
    <update id="updateByPrimaryKey" parameterType="org.example.application.custom.entity.PaperType">
        update paper_type
        set name         = #{name,jdbcType=VARCHAR},
            create_time  = #{createTime,jdbcType=TIMESTAMP},
            update_time  = #{updateTime,jdbcType=TIMESTAMP},
            del_flag     = #{delFlag,jdbcType=TINYINT},
            publisher_id = #{publisherId,jdbcType=VARCHAR},
            price        = #{price,jdbcType=DECIMAL},
            type_id      = #{typeId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>

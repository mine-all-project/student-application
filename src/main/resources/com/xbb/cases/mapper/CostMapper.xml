<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xbb.cases.mapper.CostMapper">
  <resultMap id="BaseResultMap" type="com.xbb.cases.entity.Cost">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="types" jdbcType="VARCHAR" property="types" />
    <result column="money" jdbcType="INTEGER" property="money" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, types, money, creat_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cost
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cost
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xbb.cases.entity.Cost">
    insert into cost (id, name, types, 
      money, creat_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{types,jdbcType=VARCHAR}, 
      #{money,jdbcType=INTEGER}, #{creatTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.xbb.cases.entity.Cost">
    insert into cost
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="types != null">
        types,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="types != null">
        #{types,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xbb.cases.entity.Cost">
    update cost
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="types != null">
        types = #{types,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xbb.cases.entity.Cost">
    update cost
    set name = #{name,jdbcType=VARCHAR},
      types = #{types,jdbcType=VARCHAR},
      money = #{money,jdbcType=INTEGER},
      creat_time = #{creatTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectListByPaging" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from cost
    <where>
      <if test="name != null">
        and name like concat(concat('%',#{name}),'%')
      </if>
      <if test="types != null">
        and types like concat(concat('%',#{types}),'%')
      </if>
    </where>
    order by id desc
    limit #{page}, #{limit}
  </select>
  <select id="selectCountByPaging" resultType="java.lang.Integer">
    select
    count(*)
    from cost
    <where>
      <if test="name != null">
        and name like concat(concat('%',#{name}),'%')
      </if>
      <if test="types != null">
        and types like concat(concat('%',#{types}),'%')
      </if>
    </where>
  </select>
</mapper>
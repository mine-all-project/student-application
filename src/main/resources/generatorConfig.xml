<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <classPathEntry location="D:\developer\Maven\mysql\mysql-connector-java\8.0.26\mysql-connector-java-8.0.26.jar"/>
    <context id="mysql" targetRuntime="MyBatis3" defaultModelType="flat">
        <property name="autoDelimitKeywords" value="false"/>
        <property name="javaFileEncoding" value="UTF-8"/>
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <commentGenerator>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!-- 这里面可以设置property属性，每一个property属性都设置到配置的Driver上 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/demo-03"
                        userId="root" password="">

            <!--                            <property name="useInformationSchema" value="true"/>-->
            <property name="nullCatalogMeansCurrent" value="true"/>
        </jdbcConnection>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>
        <!-- dto class -->
        <javaModelGenerator targetPackage="org.example.application.custom.entity" targetProject="src/main/java">
            <property name="rootClass" value="org.example.application.common.BaseEntity"/>
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!-- mybatis xml file -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口
            targetPackage/targetProject:同javaModelGenerator
            type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：
                1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；
                2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；
                3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；
            注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER
        -->
        <javaClientGenerator targetPackage="org.example.application.custom.dao.mybatis" type="XMLMAPPER"
                             targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="rootInterface" value=""/>
        </javaClientGenerator>

        <!--        <table schema="" tableName="paper"-->
        <!--               enableCountByExample="false" enableUpdateByExample="false"-->
        <!--               enableDeleteByExample="false" enableSelectByExample="false"-->
        <!--               selectByExampleQueryId="false">-->
        <!-- 参考 javaModelGenerator 的 constructorBased属性-->
        <!--            <property name="constructorBased" value="false"/>-->
        <!--            &lt;!&ndash; 默认为false，如果设置为true，在生成的SQL中，table名字不会加上catalog或schema； &ndash;&gt;-->
        <!--            <property name="ignoreQualifiersAtRuntime" value="false"/>-->
        <!--            &lt;!&ndash; 参考 javaModelGenerator 的 immutable 属性 &ndash;&gt;-->
        <!--            <property name="immutable" value="false"/>-->
        <!--            &lt;!&ndash; 指定是否只生成domain类，如果设置为true，只生成domain类，如果还配置了sqlMapGenerator，那么在mapper XML文件中，只生成resultMap元素 &ndash;&gt;-->
        <!--            <property name="modelOnly" value="false"/>-->
        <!--            <property name="selectAllOrderByClause" value="createTime desc"/>-->

        <!-- 如果设置为true，生成的model类会直接使用column本身的名字，而不会再使用驼峰命名方法，比如BORN_DATE，生成的属性名字就是BORN_DATE,而不会是bornDate -->
        <!--            <property name="useActualColumnNames" value="false"/>-->
        <!--            <columnOverride column="create_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>-->
        <!--            <columnOverride column="update_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>-->
        <!--            <columnOverride column="status" javaType="java.lang.Integer" jdbcType="TINYINT"/>-->
        <!--            <columnOverride column="del_flag" javaType="java.lang.Integer" jdbcType="TINYINT"/>-->
        <!--            <columnOverride column="content" javaType="java.lang.String" jdbcType="VARCHAR"/>-->
        <!--        </table>-->
        <table schema="" tableName="order" enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            <columnOverride column="create_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
            <columnOverride column="update_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>
            <columnOverride column="status" javaType="java.lang.Integer" jdbcType="TINYINT"/>
            <columnOverride column="del_flag" javaType="java.lang.Integer" jdbcType="TINYINT"/>
            <columnOverride column="goods_ids" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </table>
<!--        <table schema="" tableName="message" enableCountByExample="false" enableUpdateByExample="false"-->
<!--               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">-->
<!--            <columnOverride column="create_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>-->
<!--            <columnOverride column="update_time" javaType="java.time.LocalDateTime" jdbcType="TIMESTAMP"/>-->
<!--            <columnOverride column="status" javaType="java.lang.Integer" jdbcType="TINYINT"/>-->
<!--            <columnOverride column="del_flag" javaType="java.lang.Integer" jdbcType="TINYINT"/>-->
<!--            <columnOverride column="message" javaType="java.lang.String" jdbcType="VARCHAR"/>-->
<!--        </table>-->
    </context>
</generatorConfiguration>
